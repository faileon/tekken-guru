@import "src/scss/variables";


:host {
  > *:not(:last-child) {
    margin-bottom: $md-margin;
  }

  .option-bar {
    display: flex;
    align-items: center;

    > * {
      margin-right: $xs-margin;
      @media(min-width: $bp-mobile) {
        // margin-bottom: $md-margin;
      }
    }

    .right-menu {
      display: flex;
      margin-left: auto;
    }
  }

  .list {
    // calculate the height of virtual scroller: 100% of parent - margin of option bar - height of option bar
    $option-bar-height: 30px;
    height: calc(100% - #{$md-margin} - #{$option-bar-height});

    tg-card-with-actions {
      margin-bottom: $sm-margin;

      ::ng-deep{
        tg-card {
          height: $card-height;
        }
      }

      @media(min-width: $bp-mobile) {
        margin-bottom: $md-margin;
      }


      .properties {
        display: flex;
        justify-content: flex-end;
        max-height: 24px;

        > .property {
          height: 100%;
          width: auto;

          &:not(:last-child) {
            margin-right: $xs-margin;
          }
        }
      }

      .main {
        display: flex;
        flex-direction: column;
        margin-right: auto;
        white-space: nowrap;
        padding-top: $card-header-min-height; // offset due to overflowing vid, so we keep notation centered



        .notation {
          margin: auto 0;
        }

        .hits {
          font-family: 'Roboto Condensed', sans-serif;

          .move {
            color: $primary-color-highlight;
          }

          .damage {
            color: $secondary-color;
          }
        }
      }

      tg-video {
        margin: $lg-margin $lg-margin 0 $lg-margin;
        @media(min-width: $bp-mobile) {
          margin: $xs-margin $md-margin 0 $md-margin;
        }
      }

      .frame-data {
        margin-top: auto;
        font-family: Roboto Condensed, "Helvetica Neue", sans-serif;
        font-weight: 300;

        @media(min-width: $bp-mobile) {
          min-width: 175px;
        }

        > table {
          white-space: nowrap;
          width: 100%;

          > tr {

            > td {
              &.right-aligned {
                text-align: right;
              }

              > span.hit-property {
                font-size: 0.75rem;
              }
            }
          }

          .positive {
            color: $primary-color-highlight;
          }

          .neutral {
            color: $ternary-color;
          }

          .negative {
            color: $secondary-color;
          }


        }
      }
    }
  }


}
